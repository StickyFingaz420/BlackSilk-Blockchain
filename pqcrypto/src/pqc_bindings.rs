/* FFI bindings to libbitcoinpqc (generated by bindgen)
   This file should be replaced by the output of the manual bindgen run for full functionality.
   For brevity, only the most relevant types and functions are shown here. */

pub const bitcoin_pqc_algorithm_t_BITCOIN_PQC_ML_DSA_44: ::std::os::raw::c_int = 2;
pub const bitcoin_pqc_algorithm_t_BITCOIN_PQC_FN_DSA_512: ::std::os::raw::c_int = 1;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bitcoin_pqc_keypair_t {
    pub algorithm: ::std::os::raw::c_int,
    pub public_key: *mut ::std::os::raw::c_void,
    pub secret_key: *mut ::std::os::raw::c_void,
    pub public_key_size: usize,
    pub secret_key_size: usize,
}

extern "C" {
    pub fn bitcoin_pqc_public_key_size(algorithm: ::std::os::raw::c_int) -> usize;
    pub fn bitcoin_pqc_secret_key_size(algorithm: ::std::os::raw::c_int) -> usize;
    pub fn bitcoin_pqc_signature_size(algorithm: ::std::os::raw::c_int) -> usize;
    pub fn ml_dsa_44_keygen(pk: *mut u8, sk: *mut u8, random_data: *const u8, random_data_size: usize) -> ::std::os::raw::c_int;
    pub fn fn_dsa_512_keygen(pk: *mut u8, sk: *mut u8, random_data: *const u8, random_data_size: usize) -> ::std::os::raw::c_int;
    pub fn ml_dsa_44_sign(sig: *mut u8, siglen: *mut usize, m: *const u8, mlen: usize, sk: *const u8) -> ::std::os::raw::c_int;
    pub fn fn_dsa_512_sign(sig: *mut u8, siglen: *mut usize, m: *const u8, mlen: usize, sk: *const u8) -> ::std::os::raw::c_int;
    pub fn ml_dsa_44_verify(sig: *const u8, siglen: usize, m: *const u8, mlen: usize, pk: *const u8) -> ::std::os::raw::c_int;
    pub fn fn_dsa_512_verify(sig: *const u8, siglen: usize, m: *const u8, mlen: usize, pk: *const u8) -> ::std::os::raw::c_int;
}
