openapi: 3.0.0
info:
  title: BlackSilk Marketplace API
  version: 0.1.0
  description: |
    API specification for the BlackSilk decentralized marketplace.
    All endpoints require wallet signature authentication unless specified otherwise.

servers:
  - url: http://localhost:8000
    description: Local development
  - url: https://api.blacksilk.market
    description: Production (TLS required)

components:
  schemas:
    Listing:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        price:
          type: integer
          format: uint64
        seller:
          type: string
          description: Seller's BlackSilk address
        images:
          type: array
          items:
            type: string
            description: IPFS hash
        category:
          type: string
        created_at:
          type: integer
          format: uint64
        status:
          type: string
          enum: [Active, Sold, Suspended]
    
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        listing_id:
          type: string
          format: uuid
        buyer:
          type: string
          description: Buyer's BlackSilk address
        seller:
          type: string
          description: Seller's BlackSilk address
        amount:
          type: integer
          format: uint64
        escrow_address:
          type: string
          description: Multisig escrow address
        status:
          type: string
          enum: [Created, PaidToEscrow, Shipped, Completed, Disputed, Refunded]
        created_at:
          type: integer
          format: uint64

paths:
  /listings:
    get:
      summary: List all active listings
      operationId: getListings
      parameters:
        - in: query
          name: category
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: integer
          required: false
        - in: query
          name: limit
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: List of listings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Listing'
    
    post:
      summary: Create a new listing
      operationId: createListing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
      responses:
        '201':
          description: Listing created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'

  /listings/{id}:
    get:
      summary: Get a specific listing
      operationId: getListing
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Listing details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'

  /orders:
    post:
      summary: Create a new order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /orders/{id}:
    get:
      summary: Get order details
      operationId: getOrder
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /ipfs:
    post:
      summary: Upload file to IPFS
      operationId: uploadToIPFS
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: IPFS hash of uploaded file
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string

  /escrow:
    post:
      summary: Create escrow contract
      operationId: createEscrow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  format: uint64
                buyer:
                  type: string
                seller:
                  type: string
      responses:
        '201':
          description: Escrow contract created
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  status:
                    type: string

security:
  - walletAuth: []

components:
  securitySchemes:
    walletAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT signed by user's BlackSilk wallet 