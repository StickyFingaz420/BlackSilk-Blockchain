//! Example: FFI wrapper for RandomX C API (auto-generated by bindgen)
#![allow(non_camel_case_types, non_snake_case, non_upper_case_globals)]

include!(concat!(env!("CARGO_MANIFEST_DIR"), "/src/randomx_ffi.rs"));

use std::ffi::c_void;
use std::ptr;

pub unsafe fn randomx_hash(
    flags: u32,
    seed: &[u8],
    input: &[u8],
    output: &mut [u8],
) {
    let cache = randomx_init_cache(flags, seed.as_ptr() as *const c_void, seed.len());
    assert!(!cache.is_null(), "Failed to create RandomX cache");
    let vm = randomx_create_vm(flags, cache, ptr::null_mut());
    assert!(!vm.is_null(), "Failed to create RandomX VM");
    randomx_calculate_hash(vm, input.as_ptr() as *const c_void, input.len(), output.as_mut_ptr() as *mut c_void);
    randomx_destroy_vm(vm);
    randomx_release_cache(cache);
}
